# Nginx Dockerfile - 支持初始化脚本写入配置
FROM nginx:1.25-alpine

# 安装必要的工具
RUN apk add --no-cache \
    bash \
    curl \
    openssl

# 创建必要的目录
RUN mkdir -p /etc/nginx/ssl \
    && mkdir -p /var/log/nginx \
    && mkdir -p /etc/nginx/conf.d

# 创建初始化脚本目录
RUN mkdir -p /docker-entrypoint.d

# 复制初始化脚本
COPY scripts/nginx/nginx_init.sh /docker-entrypoint.d/10-nginx-init.sh

# 设置执行权限
RUN chmod +x /docker-entrypoint.d/10-nginx-init.sh

# 创建默认的Nginx配置（用于启动）
RUN cat > /etc/nginx/conf.d/default.conf << 'EOF'
# 鲸落默认 Nginx 配置
# 用于Nginx容器启动时提供一个基础配置，避免启动失败。
# 实际的开发/生产配置会通过初始化脚本写入。

upstream whalefall_backend {
    # 默认指向一个不存在的服务，因为这个配置只是为了启动
    # 实际的后端服务地址会在初始化脚本执行后生效
    server 127.0.0.1:5001;
}

server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # 默认的SSL配置，如果不存在证书，Nginx可能无法启动HTTPS
    # 实际的证书会在初始化脚本执行后生效
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # 客户端最大请求体大小
    client_max_body_size 16M;

    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
        return 200 "Nginx is running (Default)\n";
        add_header Content-Type text/plain;
    }

    location /health {
        access_log off;
        return 200 "Nginx is running (Default)\n";
        add_header Content-Type text/plain;
    }
}
EOF

# 创建默认的SSL证书（自签名，用于启动）
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/ssl/key.pem \
    -out /etc/nginx/ssl/cert.pem \
    -subj "/C=CN/ST=Beijing/L=Beijing/O=Whalefall/OU=IT/CN=localhost"

# 暴露端口
EXPOSE 80 443

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1
