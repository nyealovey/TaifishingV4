version: '3.8'

services:
  # PostgreSQL数据库 - 开发环境
  postgres:
    image: postgres:15-alpine
    container_name: taifish_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: taifish_dev
      POSTGRES_USER: taifish_user
      POSTGRES_PASSWORD: Taifish2024!
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init_dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./docker/postgres/postgresql_dev.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5432:5432"
    networks:
      - taifish_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taifish_user -d taifish_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c log_statement=all
      -c log_min_duration_statement=1000
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Redis缓存 - 开发环境
  redis:
    image: redis:7-alpine
    container_name: taifish_redis_dev
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass Taifish2024! --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_dev_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - taifish_dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  taifish_dev_network:
    driver: bridge
