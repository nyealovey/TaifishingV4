# Nginx配置 - Docker环境
# 用于Flask应用在Docker容器中运行的情况

# 定义upstream，包含fallback机制
upstream whalefall_backend {
    server whalefall:5001 max_fails=3 fail_timeout=30s;
    # 当whalefall不可用时，使用backup服务器
    server 127.0.0.1:8080 backup;
}

# HTTP 重定向到 HTTPS (仅对域名)
server {
    listen 80;
    server_name domain.com *.domain.com;
    
    # 重定向所有 HTTP 请求到 HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTP 配置 (localhost 保持 HTTP 访问)
server {
    listen 80;
    server_name localhost;
    
    client_max_body_size 16M;
    
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # 主应用代理
    location / {
        proxy_pass http://whalefall_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # 当后端不可用时，返回503状态
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
    
    # 静态文件代理
    location /static/ {
        proxy_pass http://whalefall_backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://whalefall_backend;
        access_log off;
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
    
    # 回退页面（当Flask应用不可用时）
    location @fallback {
        root /etc/nginx/error_pages;
        try_files /50x.html =503;
    }
    
    # 自定义错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /etc/nginx/error_pages;
        internal;
    }
    
    location = /50x.html {
        root /etc/nginx/error_pages;
        internal;
    }
}

# HTTPS配置
server {
    listen 443 ssl;
    http2 on;
    server_name localhost domain.com *.domain.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/whale.pem;
    ssl_certificate_key /etc/nginx/ssl/whale.key;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    client_max_body_size 16M;
    
    # 日志配置
    access_log /var/log/nginx/ssl_access.log;
    error_log /var/log/nginx/ssl_error.log;
    
    # 域名特定日志 (可选)
    if ($host = "domain.com") {
        access_log /var/log/nginx/domain_access.log;
    }
    
    # 主应用代理
    location / {
        proxy_pass http://whalefall_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时配置
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # 当后端不可用时，返回503状态
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
    
    # 静态文件代理
    location /static/ {
        proxy_pass http://whalefall_backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://whalefall_backend;
        access_log off;
        proxy_intercept_errors on;
        error_page 502 503 504 = @fallback;
    }
    
    # 回退页面（当Flask应用不可用时）
    location @fallback {
        root /etc/nginx/error_pages;
        try_files /50x.html =503;
    }
    
    # 自定义错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /etc/nginx/error_pages;
        internal;
    }
    
    location = /50x.html {
        root /etc/nginx/error_pages;
        internal;
    }
}