# 鲸落 - Docker Compose开发环境配置 (最新稳定版)
services:
  # Flask应用服务
  flask:
    build: 
      context: ../..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://taifish_user:taifish_pass@postgres:5432/taifish_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_SECRET_KEY=dev-jwt-secret-change-in-production
      - PYTHONPATH=/app
    volumes:
      - ../../:/app
      - ../../userdata:/app/userdata
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taifish-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL数据库服务
  postgres:
    image: postgres:16.3
    environment:
      - POSTGRES_DB=taifish_dev
      - POSTGRES_USER=taifish_user
      - POSTGRES_PASSWORD=taifish_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../docker/configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - taifish-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taifish_user -d taifish_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis缓存服务
  redis:
    image: redis:7.2.5
    command: redis-server --appendonly yes --requirepass taifish_redis_pass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - taifish-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  # Nginx反向代理 (已禁用)
  # nginx:
  #   image: nginx:1.25.5
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ../../docker/configs/nginx.conf:/etc/nginx/nginx.conf
  #     - ../../app/static:/usr/share/nginx/html/static
  #   depends_on:
  #     - flask
  #   networks:
  #     - taifish-network
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  taifish-network:
    driver: bridge