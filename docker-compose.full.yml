version: '3.9'

# 完整环境部署配置
# 包含：PostgreSQL、Redis、Nginx、Flask应用
# 适用于生产环境统一部署

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: whalefall_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-whalefall_prod}
      - POSTGRES_USER=${POSTGRES_USER:-whalefall_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./userdata/postgres:/var/lib/postgresql/data
      - ./sql/init_postgresql.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./sql/permission_configs.sql:/docker-entrypoint-initdb.d/permission_configs.sql:ro
      - ./sql/init_scheduler_tasks.sql:/docker-entrypoint-initdb.d/init_scheduler_tasks.sql:ro
    ports:
      - "5432:5432"
    networks:
      - whalefall_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-whalefall_user} -d ${POSTGRES_DB:-whalefall_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: whalefall_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - ./userdata/redis:/data
    ports:
      - "6379:6379"
    networks:
      - whalefall_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Flask应用
  whalefall:
    image: whalefall:latest
    container_name: whalefall_app
    restart: unless-stopped
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-whalefall_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-whalefall_prod}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - BCRYPT_LOG_ROUNDS=${BCRYPT_LOG_ROUNDS:-12}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - APP_NAME=${APP_NAME:-鲸落}
      - APP_VERSION=${APP_VERSION:-4.0.0}
      - PERMANENT_SESSION_LIFETIME=${PERMANENT_SESSION_LIFETIME:-3600}
    env_file:
      - .env
    volumes:
      - ./userdata/app:/app/userdata
      - ./userdata/logs:/app/userdata/logs
    networks:
      - whalefall_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: whalefall_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./userdata/nginx/logs:/var/log/nginx
      - ./userdata/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - whalefall_network
    depends_on:
      whalefall:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  whalefall_network:
    driver: bridge
    name: whalefall_network
