"""
泰摸鱼吧 - 账户数据模型
"""

from datetime import datetime

from app import db


class Account(db.Model):
    """账户数据模型"""

    __tablename__ = "accounts"

    id = db.Column(db.Integer, primary_key=True)
    instance_id = db.Column(db.Integer, db.ForeignKey("instances.id"), nullable=False)
    username = db.Column(db.String(255), nullable=False)
    host = db.Column(db.String(255), nullable=True)  # 主机模式，如 %, localhost, 10.10.%
    database_name = db.Column(db.String(255), nullable=True)
    account_type = db.Column(db.String(50), nullable=True)  # user, role, group等
    plugin = db.Column(db.String(100), nullable=True)  # 认证插件，如 caching_sha2_password
    password_expired = db.Column(db.Boolean, default=False)  # 密码是否过期
    password_last_changed = db.Column(db.DateTime, nullable=True)  # 密码最后修改时间
    is_locked = db.Column(db.Boolean, default=False)  # 账户是否锁定/禁用
    is_active = db.Column(db.Boolean, default=True)
    last_login = db.Column(db.DateTime, nullable=True)

    # 权限信息字段 - 已迁移到CurrentAccountSyncData模型
    is_superuser = db.Column(db.Boolean, default=False)  # 是否为超级用户
    can_grant = db.Column(db.Boolean, default=False)  # 是否有授权权限

    # Oracle特有字段
    user_id = db.Column(db.Integer, nullable=True)  # Oracle数据库中的用户ID
    lock_date = db.Column(db.DateTime, nullable=True)  # 锁定日期
    expiry_date = db.Column(db.DateTime, nullable=True)  # 过期日期
    default_tablespace = db.Column(db.String(100), nullable=True)  # 默认表空间

    # SQL Server特有字段
    account_created_at = db.Column(db.DateTime, nullable=True)  # 账户在数据库中的创建时间

    # 分类相关字段
    last_classified_at = db.Column(db.DateTime, nullable=True)  # 最后分类时间
    last_classification_batch_id = db.Column(db.String(36), nullable=True)  # 最后分类批次ID

    # 同步相关字段
    last_sync_time = db.Column(db.DateTime, nullable=True)  # 最后同步时间

    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)

    # 关联关系 - 注意：backref在Instance模型中定义

    def __repr__(self) -> str:
        return f"<Account {self.username}@{self.instance.name if self.instance else 'Unknown'}>"

    def to_dict(self) -> dict:
        """转换为字典"""
        import json

        return {
            "id": self.id,
            "instance_id": self.instance_id,
            "username": self.username,
            "host": self.host,
            "database_name": self.database_name,
            "account_type": self.account_type,
            "plugin": self.plugin,
            "password_expired": self.password_expired,
            "password_last_changed": (self.password_last_changed.isoformat() if self.password_last_changed else None),
            "is_locked": self.is_locked,
            "is_active": self.is_active,
            "last_login": self.last_login.isoformat() if self.last_login else None,
            # permissions字段已迁移到CurrentAccountSyncData模型
            "is_superuser": self.is_superuser,
            "can_grant": self.can_grant,
            "user_id": self.user_id,  # Oracle数据库中的用户ID
            "lock_date": (self.lock_date.isoformat() if self.lock_date else None),  # 锁定日期
            "expiry_date": (self.expiry_date.isoformat() if self.expiry_date else None),  # 过期日期
            "default_tablespace": self.default_tablespace,  # 默认表空间
            "account_created_at": (
                self.account_created_at.isoformat() if self.account_created_at else None
            ),  # 账户创建时间
            "last_sync_time": (self.last_sync_time.isoformat() if self.last_sync_time else None),  # 最后同步时间
            "created_at": self.created_at.isoformat(),
            "updated_at": self.updated_at.isoformat(),
            "instance_name": self.instance.name if self.instance else None,
            "instance_type": self.instance.db_type if self.instance else None,
            "environment": self.instance.environment if self.instance else None,
        }
